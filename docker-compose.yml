version: "3.8"

services:
  auth:
    build:
      context: .
      dockerfile: docker/auth.Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db

  ride-match:
    build:
      context: .
      dockerfile: docker/ride_match.Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - redis

  driver-location:
    build:
      context: .
      dockerfile: docker/driver_location.Dockerfile
    ports:
      - "8002:8002"
    depends_on:
      - redis

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_CLUSTER_ID: "abcdefghijklmnopqrstuv"  # random 22-char ID
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  pgdata:
  kafka_data:
